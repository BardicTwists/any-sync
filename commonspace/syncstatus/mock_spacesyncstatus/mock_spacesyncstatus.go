// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anyproto/any-sync/commonspace/syncstatus (interfaces: SpaceSyncStatusUpdater)
//
// Generated by this command:
//
//	mockgen -destination mock_spacesyncstatus/mock_spacesyncstatus.go github.com/anyproto/any-sync/commonspace/syncstatus SpaceSyncStatusUpdater
//
// Package mock_syncstatus is a generated GoMock package.
package mock_syncstatus

import (
	context "context"
	reflect "reflect"

	app "github.com/anyproto/any-sync/app"
	syncstatus "github.com/anyproto/any-sync/commonspace/syncstatus"
	gomock "go.uber.org/mock/gomock"
)

// MockSpaceSyncStatusUpdater is a mock of SpaceSyncStatusUpdater interface.
type MockSpaceSyncStatusUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceSyncStatusUpdaterMockRecorder
}

// MockSpaceSyncStatusUpdaterMockRecorder is the mock recorder for MockSpaceSyncStatusUpdater.
type MockSpaceSyncStatusUpdaterMockRecorder struct {
	mock *MockSpaceSyncStatusUpdater
}

// NewMockSpaceSyncStatusUpdater creates a new mock instance.
func NewMockSpaceSyncStatusUpdater(ctrl *gomock.Controller) *MockSpaceSyncStatusUpdater {
	mock := &MockSpaceSyncStatusUpdater{ctrl: ctrl}
	mock.recorder = &MockSpaceSyncStatusUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceSyncStatusUpdater) EXPECT() *MockSpaceSyncStatusUpdaterMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockSpaceSyncStatusUpdater) Close(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockSpaceSyncStatusUpdaterMockRecorder) Close(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockSpaceSyncStatusUpdater)(nil).Close), arg0)
}

// Init mocks base method.
func (m *MockSpaceSyncStatusUpdater) Init(arg0 *app.App) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockSpaceSyncStatusUpdaterMockRecorder) Init(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockSpaceSyncStatusUpdater)(nil).Init), arg0)
}

// Name mocks base method.
func (m *MockSpaceSyncStatusUpdater) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockSpaceSyncStatusUpdaterMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockSpaceSyncStatusUpdater)(nil).Name))
}

// Run mocks base method.
func (m *MockSpaceSyncStatusUpdater) Run(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockSpaceSyncStatusUpdaterMockRecorder) Run(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockSpaceSyncStatusUpdater)(nil).Run), arg0)
}

// SendUpdate mocks base method.
func (m *MockSpaceSyncStatusUpdater) SendUpdate(arg0 *syncstatus.SpaceSync) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendUpdate", arg0)
}

// SendUpdate indicates an expected call of SendUpdate.
func (mr *MockSpaceSyncStatusUpdaterMockRecorder) SendUpdate(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendUpdate", reflect.TypeOf((*MockSpaceSyncStatusUpdater)(nil).SendUpdate), arg0)
}
