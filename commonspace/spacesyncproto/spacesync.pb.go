// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: commonspace/spacesyncproto/protos/spacesync.proto

package spacesyncproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCodes int32

const (
	ErrCodes_Unexpected              ErrCodes = 0
	ErrCodes_SpaceMissing            ErrCodes = 1
	ErrCodes_SpaceExists             ErrCodes = 2
	ErrCodes_SpaceNotInCache         ErrCodes = 3
	ErrCodes_SpaceIsDeleted          ErrCodes = 4
	ErrCodes_PeerIsNotResponsible    ErrCodes = 5
	ErrCodes_ReceiptIsInvalid        ErrCodes = 6
	ErrCodes_InvalidPayload          ErrCodes = 7
	ErrCodes_DuplicateRequest        ErrCodes = 8
	ErrCodes_TooManyRequestsFromPeer ErrCodes = 9
	ErrCodes_ErrorOffset             ErrCodes = 100
)

// Enum value maps for ErrCodes.
var (
	ErrCodes_name = map[int32]string{
		0:   "Unexpected",
		1:   "SpaceMissing",
		2:   "SpaceExists",
		3:   "SpaceNotInCache",
		4:   "SpaceIsDeleted",
		5:   "PeerIsNotResponsible",
		6:   "ReceiptIsInvalid",
		7:   "InvalidPayload",
		8:   "DuplicateRequest",
		9:   "TooManyRequestsFromPeer",
		100: "ErrorOffset",
	}
	ErrCodes_value = map[string]int32{
		"Unexpected":              0,
		"SpaceMissing":            1,
		"SpaceExists":             2,
		"SpaceNotInCache":         3,
		"SpaceIsDeleted":          4,
		"PeerIsNotResponsible":    5,
		"ReceiptIsInvalid":        6,
		"InvalidPayload":          7,
		"DuplicateRequest":        8,
		"TooManyRequestsFromPeer": 9,
		"ErrorOffset":             100,
	}
)

func (x ErrCodes) Enum() *ErrCodes {
	p := new(ErrCodes)
	*p = x
	return p
}

func (x ErrCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[0].Descriptor()
}

func (ErrCodes) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[0]
}

func (x ErrCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCodes.Descriptor instead.
func (ErrCodes) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{0}
}

// SpaceSubscription contains in ObjectSyncMessage.Payload and indicates that we need to subscribe or unsubscribe the current stream to this space
type SpaceSubscriptionAction int32

const (
	SpaceSubscriptionAction_Subscribe   SpaceSubscriptionAction = 0
	SpaceSubscriptionAction_Unsubscribe SpaceSubscriptionAction = 1
)

// Enum value maps for SpaceSubscriptionAction.
var (
	SpaceSubscriptionAction_name = map[int32]string{
		0: "Subscribe",
		1: "Unsubscribe",
	}
	SpaceSubscriptionAction_value = map[string]int32{
		"Subscribe":   0,
		"Unsubscribe": 1,
	}
)

func (x SpaceSubscriptionAction) Enum() *SpaceSubscriptionAction {
	p := new(SpaceSubscriptionAction)
	*p = x
	return p
}

func (x SpaceSubscriptionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceSubscriptionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[1].Descriptor()
}

func (SpaceSubscriptionAction) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[1]
}

func (x SpaceSubscriptionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceSubscriptionAction.Descriptor instead.
func (SpaceSubscriptionAction) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{1}
}

// DiffType is a type of diff
type DiffType int32

const (
	DiffType_Initial       DiffType = 0
	DiffType_Precalculated DiffType = 1
)

// Enum value maps for DiffType.
var (
	DiffType_name = map[int32]string{
		0: "Initial",
		1: "Precalculated",
	}
	DiffType_value = map[string]int32{
		"Initial":       0,
		"Precalculated": 1,
	}
)

func (x DiffType) Enum() *DiffType {
	p := new(DiffType)
	*p = x
	return p
}

func (x DiffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiffType) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[2].Descriptor()
}

func (DiffType) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[2]
}

func (x DiffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiffType.Descriptor instead.
func (DiffType) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{2}
}

// HeadSyncRange presenting a request for one range
type HeadSyncRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          uint64                 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            uint64                 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Elements      bool                   `protobuf:"varint,4,opt,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncRange) Reset() {
	*x = HeadSyncRange{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncRange) ProtoMessage() {}

func (x *HeadSyncRange) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncRange.ProtoReflect.Descriptor instead.
func (*HeadSyncRange) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{0}
}

func (x *HeadSyncRange) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *HeadSyncRange) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *HeadSyncRange) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *HeadSyncRange) GetElements() bool {
	if x != nil {
		return x.Elements
	}
	return false
}

// HeadSyncResult presenting a response for one range
type HeadSyncResult struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Hash          []byte                   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Elements      []*HeadSyncResultElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	Count         uint32                   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResult) Reset() {
	*x = HeadSyncResult{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResult) ProtoMessage() {}

func (x *HeadSyncResult) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResult.ProtoReflect.Descriptor instead.
func (*HeadSyncResult) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{1}
}

func (x *HeadSyncResult) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *HeadSyncResult) GetElements() []*HeadSyncResultElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *HeadSyncResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// HeadSyncResultElement presenting state of one object
type HeadSyncResultElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Head          string                 `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResultElement) Reset() {
	*x = HeadSyncResultElement{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResultElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResultElement) ProtoMessage() {}

func (x *HeadSyncResultElement) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResultElement.ProtoReflect.Descriptor instead.
func (*HeadSyncResultElement) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{2}
}

func (x *HeadSyncResultElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeadSyncResultElement) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

// HeadSyncRequest is a request for HeadSync
type HeadSyncRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	SpaceId string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Ranges  []*HeadSyncRange       `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	// Deprecated: Marked as deprecated in commonspace/spacesyncproto/protos/spacesync.proto.
	DiffType      DiffType `protobuf:"varint,3,opt,name=diffType,proto3,enum=spacesync.DiffType" json:"diffType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncRequest) Reset() {
	*x = HeadSyncRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncRequest) ProtoMessage() {}

func (x *HeadSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncRequest.ProtoReflect.Descriptor instead.
func (*HeadSyncRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{3}
}

func (x *HeadSyncRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *HeadSyncRequest) GetRanges() []*HeadSyncRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// Deprecated: Marked as deprecated in commonspace/spacesyncproto/protos/spacesync.proto.
func (x *HeadSyncRequest) GetDiffType() DiffType {
	if x != nil {
		return x.DiffType
	}
	return DiffType_Initial
}

// HeadSyncResponse is a response for HeadSync
type HeadSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*HeadSyncResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	DiffType      DiffType               `protobuf:"varint,2,opt,name=diffType,proto3,enum=spacesync.DiffType" json:"diffType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResponse) Reset() {
	*x = HeadSyncResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResponse) ProtoMessage() {}

func (x *HeadSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResponse.ProtoReflect.Descriptor instead.
func (*HeadSyncResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{4}
}

func (x *HeadSyncResponse) GetResults() []*HeadSyncResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *HeadSyncResponse) GetDiffType() DiffType {
	if x != nil {
		return x.DiffType
	}
	return DiffType_Initial
}

// ObjectSyncMessage is a message sent on object sync
type ObjectSyncMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	ReplyId       string                 `protobuf:"bytes,3,opt,name=replyId,proto3" json:"replyId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	ObjectId      string                 `protobuf:"bytes,5,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectSyncMessage) Reset() {
	*x = ObjectSyncMessage{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectSyncMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSyncMessage) ProtoMessage() {}

func (x *ObjectSyncMessage) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSyncMessage.ProtoReflect.Descriptor instead.
func (*ObjectSyncMessage) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{5}
}

func (x *ObjectSyncMessage) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ObjectSyncMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ObjectSyncMessage) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *ObjectSyncMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ObjectSyncMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

// SpacePushRequest is a request to add space on a node containing only one acl record
type SpacePushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *SpacePayload          `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Credential    []byte                 `protobuf:"bytes,2,opt,name=Credential,proto3" json:"Credential,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePushRequest) Reset() {
	*x = SpacePushRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePushRequest) ProtoMessage() {}

func (x *SpacePushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePushRequest.ProtoReflect.Descriptor instead.
func (*SpacePushRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{6}
}

func (x *SpacePushRequest) GetPayload() *SpacePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SpacePushRequest) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

// SpacePushResponse is an empty response
type SpacePushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePushResponse) Reset() {
	*x = SpacePushResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePushResponse) ProtoMessage() {}

func (x *SpacePushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePushResponse.ProtoReflect.Descriptor instead.
func (*SpacePushResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{7}
}

// SpacePullRequest is a request to request a space on a node that doesn't have it
type SpacePullRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePullRequest) Reset() {
	*x = SpacePullRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePullRequest) ProtoMessage() {}

func (x *SpacePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePullRequest.ProtoReflect.Descriptor instead.
func (*SpacePullRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{8}
}

func (x *SpacePullRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpacePullResponse is a response with header and acl root
type SpacePullResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *SpacePayload          `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePullResponse) Reset() {
	*x = SpacePullResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePullResponse) ProtoMessage() {}

func (x *SpacePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePullResponse.ProtoReflect.Descriptor instead.
func (*SpacePullResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{9}
}

func (x *SpacePullResponse) GetPayload() *SpacePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SpacePayload is a payload for pushing a space
type SpacePayload struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SpaceHeader            *RawSpaceHeaderWithId  `protobuf:"bytes,1,opt,name=spaceHeader,proto3" json:"spaceHeader,omitempty"`
	AclPayload             []byte                 `protobuf:"bytes,2,opt,name=aclPayload,proto3" json:"aclPayload,omitempty"`
	AclPayloadId           string                 `protobuf:"bytes,3,opt,name=aclPayloadId,proto3" json:"aclPayloadId,omitempty"`
	SpaceSettingsPayload   []byte                 `protobuf:"bytes,4,opt,name=spaceSettingsPayload,proto3" json:"spaceSettingsPayload,omitempty"`
	SpaceSettingsPayloadId string                 `protobuf:"bytes,5,opt,name=spaceSettingsPayloadId,proto3" json:"spaceSettingsPayloadId,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SpacePayload) Reset() {
	*x = SpacePayload{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePayload) ProtoMessage() {}

func (x *SpacePayload) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePayload.ProtoReflect.Descriptor instead.
func (*SpacePayload) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{10}
}

func (x *SpacePayload) GetSpaceHeader() *RawSpaceHeaderWithId {
	if x != nil {
		return x.SpaceHeader
	}
	return nil
}

func (x *SpacePayload) GetAclPayload() []byte {
	if x != nil {
		return x.AclPayload
	}
	return nil
}

func (x *SpacePayload) GetAclPayloadId() string {
	if x != nil {
		return x.AclPayloadId
	}
	return ""
}

func (x *SpacePayload) GetSpaceSettingsPayload() []byte {
	if x != nil {
		return x.SpaceSettingsPayload
	}
	return nil
}

func (x *SpacePayload) GetSpaceSettingsPayloadId() string {
	if x != nil {
		return x.SpaceSettingsPayloadId
	}
	return ""
}

// SpaceHeader is a header for a space
type SpaceHeader struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Identity           []byte                 `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Timestamp          int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SpaceType          string                 `protobuf:"bytes,3,opt,name=spaceType,proto3" json:"spaceType,omitempty"`
	ReplicationKey     uint64                 `protobuf:"varint,4,opt,name=replicationKey,proto3" json:"replicationKey,omitempty"`
	Seed               []byte                 `protobuf:"bytes,5,opt,name=seed,proto3" json:"seed,omitempty"`
	SpaceHeaderPayload []byte                 `protobuf:"bytes,6,opt,name=spaceHeaderPayload,proto3" json:"spaceHeaderPayload,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SpaceHeader) Reset() {
	*x = SpaceHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceHeader) ProtoMessage() {}

func (x *SpaceHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceHeader.ProtoReflect.Descriptor instead.
func (*SpaceHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceHeader) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *SpaceHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SpaceHeader) GetSpaceType() string {
	if x != nil {
		return x.SpaceType
	}
	return ""
}

func (x *SpaceHeader) GetReplicationKey() uint64 {
	if x != nil {
		return x.ReplicationKey
	}
	return 0
}

func (x *SpaceHeader) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *SpaceHeader) GetSpaceHeaderPayload() []byte {
	if x != nil {
		return x.SpaceHeaderPayload
	}
	return nil
}

// RawSpaceHeader is raw header for SpaceHeader
type RawSpaceHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceHeader   []byte                 `protobuf:"bytes,1,opt,name=spaceHeader,proto3" json:"spaceHeader,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawSpaceHeader) Reset() {
	*x = RawSpaceHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSpaceHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSpaceHeader) ProtoMessage() {}

func (x *RawSpaceHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSpaceHeader.ProtoReflect.Descriptor instead.
func (*RawSpaceHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{12}
}

func (x *RawSpaceHeader) GetSpaceHeader() []byte {
	if x != nil {
		return x.SpaceHeader
	}
	return nil
}

func (x *RawSpaceHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// RawSpaceHeaderWithId is a marshalled RawSpaceHeader with its content id
type RawSpaceHeaderWithId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RawHeader     []byte                 `protobuf:"bytes,1,opt,name=rawHeader,proto3" json:"rawHeader,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawSpaceHeaderWithId) Reset() {
	*x = RawSpaceHeaderWithId{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSpaceHeaderWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSpaceHeaderWithId) ProtoMessage() {}

func (x *RawSpaceHeaderWithId) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSpaceHeaderWithId.ProtoReflect.Descriptor instead.
func (*RawSpaceHeaderWithId) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{13}
}

func (x *RawSpaceHeaderWithId) GetRawHeader() []byte {
	if x != nil {
		return x.RawHeader
	}
	return nil
}

func (x *RawSpaceHeaderWithId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpaceSettingsContent is a payload for a space settings object
type SpaceSettingsContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*SpaceSettingsContent_ObjectDelete
	//	*SpaceSettingsContent_SpaceDelete
	Value         isSpaceSettingsContent_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSettingsContent) Reset() {
	*x = SpaceSettingsContent{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSettingsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSettingsContent) ProtoMessage() {}

func (x *SpaceSettingsContent) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSettingsContent.ProtoReflect.Descriptor instead.
func (*SpaceSettingsContent) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{14}
}

func (x *SpaceSettingsContent) GetValue() isSpaceSettingsContent_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SpaceSettingsContent) GetObjectDelete() *ObjectDelete {
	if x != nil {
		if x, ok := x.Value.(*SpaceSettingsContent_ObjectDelete); ok {
			return x.ObjectDelete
		}
	}
	return nil
}

func (x *SpaceSettingsContent) GetSpaceDelete() *SpaceDelete {
	if x != nil {
		if x, ok := x.Value.(*SpaceSettingsContent_SpaceDelete); ok {
			return x.SpaceDelete
		}
	}
	return nil
}

type isSpaceSettingsContent_Value interface {
	isSpaceSettingsContent_Value()
}

type SpaceSettingsContent_ObjectDelete struct {
	ObjectDelete *ObjectDelete `protobuf:"bytes,1,opt,name=objectDelete,proto3,oneof"`
}

type SpaceSettingsContent_SpaceDelete struct {
	SpaceDelete *SpaceDelete `protobuf:"bytes,2,opt,name=spaceDelete,proto3,oneof"`
}

func (*SpaceSettingsContent_ObjectDelete) isSpaceSettingsContent_Value() {}

func (*SpaceSettingsContent_SpaceDelete) isSpaceSettingsContent_Value() {}

// ObjectDelete is a message containing an object id which should be deleted
type ObjectDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectDelete) Reset() {
	*x = ObjectDelete{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDelete) ProtoMessage() {}

func (x *ObjectDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDelete.ProtoReflect.Descriptor instead.
func (*ObjectDelete) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{15}
}

func (x *ObjectDelete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpaceDelete is a message containing deleter peer id
type SpaceDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeleterPeerId string                 `protobuf:"bytes,1,opt,name=deleterPeerId,proto3" json:"deleterPeerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceDelete) Reset() {
	*x = SpaceDelete{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceDelete) ProtoMessage() {}

func (x *SpaceDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceDelete.ProtoReflect.Descriptor instead.
func (*SpaceDelete) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{16}
}

func (x *SpaceDelete) GetDeleterPeerId() string {
	if x != nil {
		return x.DeleterPeerId
	}
	return ""
}

// SpaceSettingsSnapshot contains all the deleted ids in a snapshot
type SpaceSettingsSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedIds    []string               `protobuf:"bytes,1,rep,name=deletedIds,proto3" json:"deletedIds,omitempty"`
	DeleterPeerId string                 `protobuf:"bytes,2,opt,name=deleterPeerId,proto3" json:"deleterPeerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSettingsSnapshot) Reset() {
	*x = SpaceSettingsSnapshot{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSettingsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSettingsSnapshot) ProtoMessage() {}

func (x *SpaceSettingsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSettingsSnapshot.ProtoReflect.Descriptor instead.
func (*SpaceSettingsSnapshot) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{17}
}

func (x *SpaceSettingsSnapshot) GetDeletedIds() []string {
	if x != nil {
		return x.DeletedIds
	}
	return nil
}

func (x *SpaceSettingsSnapshot) GetDeleterPeerId() string {
	if x != nil {
		return x.DeleterPeerId
	}
	return ""
}

// SettingsData contains ObjectTree change payload
type SettingsData struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Content       []*SpaceSettingsContent `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	Snapshot      *SpaceSettingsSnapshot  `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsData) Reset() {
	*x = SettingsData{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsData) ProtoMessage() {}

func (x *SettingsData) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsData.ProtoReflect.Descriptor instead.
func (*SettingsData) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{18}
}

func (x *SettingsData) GetContent() []*SpaceSettingsContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SettingsData) GetSnapshot() *SpaceSettingsSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type SpaceSubscription struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	SpaceIds      []string                `protobuf:"bytes,1,rep,name=spaceIds,proto3" json:"spaceIds,omitempty"`
	Action        SpaceSubscriptionAction `protobuf:"varint,2,opt,name=action,proto3,enum=spacesync.SpaceSubscriptionAction" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSubscription) Reset() {
	*x = SpaceSubscription{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSubscription) ProtoMessage() {}

func (x *SpaceSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSubscription.ProtoReflect.Descriptor instead.
func (*SpaceSubscription) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{19}
}

func (x *SpaceSubscription) GetSpaceIds() []string {
	if x != nil {
		return x.SpaceIds
	}
	return nil
}

func (x *SpaceSubscription) GetAction() SpaceSubscriptionAction {
	if x != nil {
		return x.Action
	}
	return SpaceSubscriptionAction_Subscribe
}

// AclAddRecordRequest contains marshaled consensusproto.RawRecord
type AclAddRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclAddRecordRequest) Reset() {
	*x = AclAddRecordRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclAddRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclAddRecordRequest) ProtoMessage() {}

func (x *AclAddRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclAddRecordRequest.ProtoReflect.Descriptor instead.
func (*AclAddRecordRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{20}
}

func (x *AclAddRecordRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AclAddRecordRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// AclAddRecordResponse contains created record id and marshaled consensusproto.RawRecord
type AclAddRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclAddRecordResponse) Reset() {
	*x = AclAddRecordResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclAddRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclAddRecordResponse) ProtoMessage() {}

func (x *AclAddRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclAddRecordResponse.ProtoReflect.Descriptor instead.
func (*AclAddRecordResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{21}
}

func (x *AclAddRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *AclAddRecordResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// AclGetRecordsRequest can optionally contain the last known aclHead, the server will return only new records or an empty list if there are no new records.
// If aclHead is not provided the whole list will be returned.
type AclGetRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	AclHead       string                 `protobuf:"bytes,2,opt,name=aclHead,proto3" json:"aclHead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclGetRecordsRequest) Reset() {
	*x = AclGetRecordsRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclGetRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclGetRecordsRequest) ProtoMessage() {}

func (x *AclGetRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclGetRecordsRequest.ProtoReflect.Descriptor instead.
func (*AclGetRecordsRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{22}
}

func (x *AclGetRecordsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AclGetRecordsRequest) GetAclHead() string {
	if x != nil {
		return x.AclHead
	}
	return ""
}

// AclGetRecordsResponse contains list of marshaled consensusproto.RawRecordWithId
type AclGetRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       [][]byte               `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclGetRecordsResponse) Reset() {
	*x = AclGetRecordsResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclGetRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclGetRecordsResponse) ProtoMessage() {}

func (x *AclGetRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclGetRecordsResponse.ProtoReflect.Descriptor instead.
func (*AclGetRecordsResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{23}
}

func (x *AclGetRecordsResponse) GetRecords() [][]byte {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_commonspace_spacesyncproto_protos_spacesync_proto protoreflect.FileDescriptor

var file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc = string([]byte{
	0x0a, 0x31, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x65,
	0x0a, 0x0d, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3b, 0x0a, 0x15, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x92, 0x01, 0x0a,
	0x0f, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08,
	0x64, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x64, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x78, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x64, 0x69,
	0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x64, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x11,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x10, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x22, 0x13, 0x0a, 0x11, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x52, 0x61, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x6c, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63, 0x6c, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6c, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x6c,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x36, 0x0a,
	0x16, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x52, 0x61, 0x77,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x52,
	0x61, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e,
	0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33,
	0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c,
	0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x6b, 0x0a, 0x11,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x13, 0x41, 0x63, 0x6c,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x41, 0x63, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x4a, 0x0a, 0x14, 0x41, 0x63, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x22, 0x31,
	0x0a, 0x15, 0x41, 0x63, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x2a, 0xee, 0x01, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49,
	0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x07, 0x12, 0x14,
	0x0a, 0x10, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x10,
	0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x10, 0x64, 0x2a, 0x39, 0x0a, 0x17, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x01, 0x2a, 0x2a, 0x0a,
	0x08, 0x44, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x32, 0xfc, 0x04, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x43, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x48, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0c, 0x41, 0x63, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x41, 0x63, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x41, 0x63, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x41, 0x63, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x41, 0x63, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x41, 0x63, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescOnce sync.Once
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData []byte
)

func file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP() []byte {
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescOnce.Do(func() {
		file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc), len(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc)))
	})
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData
}

var file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes = []any{
	(ErrCodes)(0),                 // 0: spacesync.ErrCodes
	(SpaceSubscriptionAction)(0),  // 1: spacesync.SpaceSubscriptionAction
	(DiffType)(0),                 // 2: spacesync.DiffType
	(*HeadSyncRange)(nil),         // 3: spacesync.HeadSyncRange
	(*HeadSyncResult)(nil),        // 4: spacesync.HeadSyncResult
	(*HeadSyncResultElement)(nil), // 5: spacesync.HeadSyncResultElement
	(*HeadSyncRequest)(nil),       // 6: spacesync.HeadSyncRequest
	(*HeadSyncResponse)(nil),      // 7: spacesync.HeadSyncResponse
	(*ObjectSyncMessage)(nil),     // 8: spacesync.ObjectSyncMessage
	(*SpacePushRequest)(nil),      // 9: spacesync.SpacePushRequest
	(*SpacePushResponse)(nil),     // 10: spacesync.SpacePushResponse
	(*SpacePullRequest)(nil),      // 11: spacesync.SpacePullRequest
	(*SpacePullResponse)(nil),     // 12: spacesync.SpacePullResponse
	(*SpacePayload)(nil),          // 13: spacesync.SpacePayload
	(*SpaceHeader)(nil),           // 14: spacesync.SpaceHeader
	(*RawSpaceHeader)(nil),        // 15: spacesync.RawSpaceHeader
	(*RawSpaceHeaderWithId)(nil),  // 16: spacesync.RawSpaceHeaderWithId
	(*SpaceSettingsContent)(nil),  // 17: spacesync.SpaceSettingsContent
	(*ObjectDelete)(nil),          // 18: spacesync.ObjectDelete
	(*SpaceDelete)(nil),           // 19: spacesync.SpaceDelete
	(*SpaceSettingsSnapshot)(nil), // 20: spacesync.SpaceSettingsSnapshot
	(*SettingsData)(nil),          // 21: spacesync.SettingsData
	(*SpaceSubscription)(nil),     // 22: spacesync.SpaceSubscription
	(*AclAddRecordRequest)(nil),   // 23: spacesync.AclAddRecordRequest
	(*AclAddRecordResponse)(nil),  // 24: spacesync.AclAddRecordResponse
	(*AclGetRecordsRequest)(nil),  // 25: spacesync.AclGetRecordsRequest
	(*AclGetRecordsResponse)(nil), // 26: spacesync.AclGetRecordsResponse
}
var file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs = []int32{
	5,  // 0: spacesync.HeadSyncResult.elements:type_name -> spacesync.HeadSyncResultElement
	3,  // 1: spacesync.HeadSyncRequest.ranges:type_name -> spacesync.HeadSyncRange
	2,  // 2: spacesync.HeadSyncRequest.diffType:type_name -> spacesync.DiffType
	4,  // 3: spacesync.HeadSyncResponse.results:type_name -> spacesync.HeadSyncResult
	2,  // 4: spacesync.HeadSyncResponse.diffType:type_name -> spacesync.DiffType
	13, // 5: spacesync.SpacePushRequest.payload:type_name -> spacesync.SpacePayload
	13, // 6: spacesync.SpacePullResponse.payload:type_name -> spacesync.SpacePayload
	16, // 7: spacesync.SpacePayload.spaceHeader:type_name -> spacesync.RawSpaceHeaderWithId
	18, // 8: spacesync.SpaceSettingsContent.objectDelete:type_name -> spacesync.ObjectDelete
	19, // 9: spacesync.SpaceSettingsContent.spaceDelete:type_name -> spacesync.SpaceDelete
	17, // 10: spacesync.SettingsData.content:type_name -> spacesync.SpaceSettingsContent
	20, // 11: spacesync.SettingsData.snapshot:type_name -> spacesync.SpaceSettingsSnapshot
	1,  // 12: spacesync.SpaceSubscription.action:type_name -> spacesync.SpaceSubscriptionAction
	6,  // 13: spacesync.SpaceSync.HeadSync:input_type -> spacesync.HeadSyncRequest
	9,  // 14: spacesync.SpaceSync.SpacePush:input_type -> spacesync.SpacePushRequest
	11, // 15: spacesync.SpaceSync.SpacePull:input_type -> spacesync.SpacePullRequest
	8,  // 16: spacesync.SpaceSync.ObjectSyncStream:input_type -> spacesync.ObjectSyncMessage
	8,  // 17: spacesync.SpaceSync.ObjectSync:input_type -> spacesync.ObjectSyncMessage
	8,  // 18: spacesync.SpaceSync.ObjectSyncRequestStream:input_type -> spacesync.ObjectSyncMessage
	23, // 19: spacesync.SpaceSync.AclAddRecord:input_type -> spacesync.AclAddRecordRequest
	25, // 20: spacesync.SpaceSync.AclGetRecords:input_type -> spacesync.AclGetRecordsRequest
	7,  // 21: spacesync.SpaceSync.HeadSync:output_type -> spacesync.HeadSyncResponse
	10, // 22: spacesync.SpaceSync.SpacePush:output_type -> spacesync.SpacePushResponse
	12, // 23: spacesync.SpaceSync.SpacePull:output_type -> spacesync.SpacePullResponse
	8,  // 24: spacesync.SpaceSync.ObjectSyncStream:output_type -> spacesync.ObjectSyncMessage
	8,  // 25: spacesync.SpaceSync.ObjectSync:output_type -> spacesync.ObjectSyncMessage
	8,  // 26: spacesync.SpaceSync.ObjectSyncRequestStream:output_type -> spacesync.ObjectSyncMessage
	24, // 27: spacesync.SpaceSync.AclAddRecord:output_type -> spacesync.AclAddRecordResponse
	26, // 28: spacesync.SpaceSync.AclGetRecords:output_type -> spacesync.AclGetRecordsResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_commonspace_spacesyncproto_protos_spacesync_proto_init() }
func file_commonspace_spacesyncproto_protos_spacesync_proto_init() {
	if File_commonspace_spacesyncproto_protos_spacesync_proto != nil {
		return
	}
	file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[14].OneofWrappers = []any{
		(*SpaceSettingsContent_ObjectDelete)(nil),
		(*SpaceSettingsContent_SpaceDelete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc), len(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes,
		DependencyIndexes: file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs,
		EnumInfos:         file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes,
		MessageInfos:      file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes,
	}.Build()
	File_commonspace_spacesyncproto_protos_spacesync_proto = out.File
	file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes = nil
	file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs = nil
}
