// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: paymentservice/paymentserviceproto/protos/paymentservice.proto

package paymentserviceproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO:
// later we will have an interface to enumerate all available tiers
// it's a bad idea to list them here, because interface will be changed often
type SubscriptionTier int32

const (
	SubscriptionTier_TierUnknown SubscriptionTier = 0
	// "free" tier
	SubscriptionTier_TierExplorer SubscriptionTier = 1
	// these can be used just for testing in debug mode
	// it will still create an active subscription, but with NO features
	SubscriptionTier_TierBuilder1WeekTEST   SubscriptionTier = 2
	SubscriptionTier_TierCoCreator1WeekTEST SubscriptionTier = 3
	// these are the real tiers:
	SubscriptionTier_TierBuilder1Year   SubscriptionTier = 4
	SubscriptionTier_TierCoCreator1Year SubscriptionTier = 5
	SubscriptionTier_TierBuilderPlus    SubscriptionTier = 6
	SubscriptionTier_TierAnytypeTeam    SubscriptionTier = 7
)

// Enum value maps for SubscriptionTier.
var (
	SubscriptionTier_name = map[int32]string{
		0: "TierUnknown",
		1: "TierExplorer",
		2: "TierBuilder1WeekTEST",
		3: "TierCoCreator1WeekTEST",
		4: "TierBuilder1Year",
		5: "TierCoCreator1Year",
		6: "TierBuilderPlus",
		7: "TierAnytypeTeam",
	}
	SubscriptionTier_value = map[string]int32{
		"TierUnknown":            0,
		"TierExplorer":           1,
		"TierBuilder1WeekTEST":   2,
		"TierCoCreator1WeekTEST": 3,
		"TierBuilder1Year":       4,
		"TierCoCreator1Year":     5,
		"TierBuilderPlus":        6,
		"TierAnytypeTeam":        7,
	}
)

func (x SubscriptionTier) Enum() *SubscriptionTier {
	p := new(SubscriptionTier)
	*p = x
	return p
}

func (x SubscriptionTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionTier) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[0].Descriptor()
}

func (SubscriptionTier) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[0]
}

func (x SubscriptionTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionTier.Descriptor instead.
func (SubscriptionTier) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{0}
}

type SubscriptionStatus int32

const (
	SubscriptionStatus_StatusUnknown SubscriptionStatus = 0
	// payment is still pending
	// this will be the status until the payment is confirmed or N is elapsed and no payment is received
	// in the last case the subscription will switch to Status_Unknown or Status_Active
	SubscriptionStatus_StatusPending SubscriptionStatus = 1
	SubscriptionStatus_StatusActive  SubscriptionStatus = 2
	// when buying from other side - some data is missing in the Subscription
	// we need to provide additional data after the payment
	// please call FinalizeSubscription to fill-in needed fields
	SubscriptionStatus_StatusPendingRequiresFinalization SubscriptionStatus = 3
)

// Enum value maps for SubscriptionStatus.
var (
	SubscriptionStatus_name = map[int32]string{
		0: "StatusUnknown",
		1: "StatusPending",
		2: "StatusActive",
		3: "StatusPendingRequiresFinalization",
	}
	SubscriptionStatus_value = map[string]int32{
		"StatusUnknown":                     0,
		"StatusPending":                     1,
		"StatusActive":                      2,
		"StatusPendingRequiresFinalization": 3,
	}
)

func (x SubscriptionStatus) Enum() *SubscriptionStatus {
	p := new(SubscriptionStatus)
	*p = x
	return p
}

func (x SubscriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[1].Descriptor()
}

func (SubscriptionStatus) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[1]
}

func (x SubscriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionStatus.Descriptor instead.
func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{1}
}

type PaymentMethod int32

const (
	PaymentMethod_MethodCard        PaymentMethod = 0
	PaymentMethod_MethodCrypto      PaymentMethod = 1
	PaymentMethod_MethodApplePay    PaymentMethod = 2
	PaymentMethod_MethodGooglePay   PaymentMethod = 3
	PaymentMethod_MethodAppleInapp  PaymentMethod = 4
	PaymentMethod_MethodGoogleInapp PaymentMethod = 5
	PaymentMethod_MethodNone        PaymentMethod = 6
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "MethodCard",
		1: "MethodCrypto",
		2: "MethodApplePay",
		3: "MethodGooglePay",
		4: "MethodAppleInapp",
		5: "MethodGoogleInapp",
		6: "MethodNone",
	}
	PaymentMethod_value = map[string]int32{
		"MethodCard":        0,
		"MethodCrypto":      1,
		"MethodApplePay":    2,
		"MethodGooglePay":   3,
		"MethodAppleInapp":  4,
		"MethodGoogleInapp": 5,
		"MethodNone":        6,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[2].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[2]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{2}
}

type ErrorCodes int32

const (
	ErrorCodes_Unexpected                ErrorCodes = 0
	ErrorCodes_EthAddressEmpty           ErrorCodes = 1
	ErrorCodes_InvalidSignature          ErrorCodes = 2
	ErrorCodes_TierWrong                 ErrorCodes = 3
	ErrorCodes_TierNotFound              ErrorCodes = 4
	ErrorCodes_TierInactive              ErrorCodes = 5
	ErrorCodes_PaymentMethodWrong        ErrorCodes = 6
	ErrorCodes_BadAnyName                ErrorCodes = 7
	ErrorCodes_Unknown                   ErrorCodes = 8
	ErrorCodes_SubsAlreadyActive         ErrorCodes = 9
	ErrorCodes_SubsNotFound              ErrorCodes = 10
	ErrorCodes_SubsWrongState            ErrorCodes = 11
	ErrorCodes_EmailWrongFormat          ErrorCodes = 12
	ErrorCodes_EmailAlreadyVerified      ErrorCodes = 13
	ErrorCodes_EmailAlreadySent          ErrorCodes = 14
	ErrorCodes_EmailFailedToSend         ErrorCodes = 15
	ErrorCodes_EmailExpired              ErrorCodes = 16
	ErrorCodes_EmailWrongCode            ErrorCodes = 17
	ErrorCodes_AppleInvalidReceipt       ErrorCodes = 18
	ErrorCodes_ApplePurchaseRegistration ErrorCodes = 19
	ErrorCodes_AppleSubscriptionRenew    ErrorCodes = 20
	ErrorCodes_CodeNotFound              ErrorCodes = 21
	ErrorCodes_CodeAlreadyUsed           ErrorCodes = 22
	ErrorCodes_ErrorOffset               ErrorCodes = 600
)

// Enum value maps for ErrorCodes.
var (
	ErrorCodes_name = map[int32]string{
		0:   "Unexpected",
		1:   "EthAddressEmpty",
		2:   "InvalidSignature",
		3:   "TierWrong",
		4:   "TierNotFound",
		5:   "TierInactive",
		6:   "PaymentMethodWrong",
		7:   "BadAnyName",
		8:   "Unknown",
		9:   "SubsAlreadyActive",
		10:  "SubsNotFound",
		11:  "SubsWrongState",
		12:  "EmailWrongFormat",
		13:  "EmailAlreadyVerified",
		14:  "EmailAlreadySent",
		15:  "EmailFailedToSend",
		16:  "EmailExpired",
		17:  "EmailWrongCode",
		18:  "AppleInvalidReceipt",
		19:  "ApplePurchaseRegistration",
		20:  "AppleSubscriptionRenew",
		21:  "CodeNotFound",
		22:  "CodeAlreadyUsed",
		600: "ErrorOffset",
	}
	ErrorCodes_value = map[string]int32{
		"Unexpected":                0,
		"EthAddressEmpty":           1,
		"InvalidSignature":          2,
		"TierWrong":                 3,
		"TierNotFound":              4,
		"TierInactive":              5,
		"PaymentMethodWrong":        6,
		"BadAnyName":                7,
		"Unknown":                   8,
		"SubsAlreadyActive":         9,
		"SubsNotFound":              10,
		"SubsWrongState":            11,
		"EmailWrongFormat":          12,
		"EmailAlreadyVerified":      13,
		"EmailAlreadySent":          14,
		"EmailFailedToSend":         15,
		"EmailExpired":              16,
		"EmailWrongCode":            17,
		"AppleInvalidReceipt":       18,
		"ApplePurchaseRegistration": 19,
		"AppleSubscriptionRenew":    20,
		"CodeNotFound":              21,
		"CodeAlreadyUsed":           22,
		"ErrorOffset":               600,
	}
)

func (x ErrorCodes) Enum() *ErrorCodes {
	p := new(ErrorCodes)
	*p = x
	return p
}

func (x ErrorCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[3].Descriptor()
}

func (ErrorCodes) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[3]
}

func (x ErrorCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCodes.Descriptor instead.
func (ErrorCodes) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{3}
}

type IsNameValidResponse_Code int32

const (
	IsNameValidResponse_Valid             IsNameValidResponse_Code = 0
	IsNameValidResponse_NoDotAny          IsNameValidResponse_Code = 1
	IsNameValidResponse_TooShort          IsNameValidResponse_Code = 2
	IsNameValidResponse_TooLong           IsNameValidResponse_Code = 3
	IsNameValidResponse_HasInvalidChars   IsNameValidResponse_Code = 4
	IsNameValidResponse_TierFeatureNoName IsNameValidResponse_Code = 5
	IsNameValidResponse_CanNotReserve     IsNameValidResponse_Code = 6
)

// Enum value maps for IsNameValidResponse_Code.
var (
	IsNameValidResponse_Code_name = map[int32]string{
		0: "Valid",
		1: "NoDotAny",
		2: "TooShort",
		3: "TooLong",
		4: "HasInvalidChars",
		5: "TierFeatureNoName",
		6: "CanNotReserve",
	}
	IsNameValidResponse_Code_value = map[string]int32{
		"Valid":             0,
		"NoDotAny":          1,
		"TooShort":          2,
		"TooLong":           3,
		"HasInvalidChars":   4,
		"TierFeatureNoName": 5,
		"CanNotReserve":     6,
	}
)

func (x IsNameValidResponse_Code) Enum() *IsNameValidResponse_Code {
	p := new(IsNameValidResponse_Code)
	*p = x
	return p
}

func (x IsNameValidResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsNameValidResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[4].Descriptor()
}

func (IsNameValidResponse_Code) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes[4]
}

func (x IsNameValidResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsNameValidResponse_Code.Descriptor instead.
func (IsNameValidResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{19, 0}
}

type GetSubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyID    string `protobuf:"bytes,1,opt,name=ownerAnyID,proto3" json:"ownerAnyID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetSubscriptionRequest) GetOwnerAnyID() string {
	if x != nil {
		return x.OwnerAnyID
	}
	return ""
}

type GetSubscriptionRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GetSubscriptionRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionRequestSigned) Reset() {
	*x = GetSubscriptionRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequestSigned) ProtoMessage() {}

func (x *GetSubscriptionRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequestSigned.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubscriptionRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetSubscriptionRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GetSubscriptionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// was SubscriptionTier before, changed to uint32 to allow us to use dynamic tiers
	Tier             uint32             `protobuf:"varint,1,opt,name=tier,proto3" json:"tier,omitempty"`
	Status           SubscriptionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=SubscriptionStatus" json:"status,omitempty"`
	DateStarted      uint64             `protobuf:"varint,3,opt,name=dateStarted,proto3" json:"dateStarted,omitempty"`
	DateEnds         uint64             `protobuf:"varint,4,opt,name=dateEnds,proto3" json:"dateEnds,omitempty"`
	IsAutoRenew      bool               `protobuf:"varint,5,opt,name=isAutoRenew,proto3" json:"isAutoRenew,omitempty"`
	PaymentMethod    PaymentMethod      `protobuf:"varint,6,opt,name=paymentMethod,proto3,enum=PaymentMethod" json:"paymentMethod,omitempty"`
	RequestedAnyName string             `protobuf:"bytes,7,opt,name=requestedAnyName,proto3" json:"requestedAnyName,omitempty"`
	// if user verified her email OR provided it while buying a subscription, it will be here
	UserEmail             string `protobuf:"bytes,8,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	SubscribeToNewsletter bool   `protobuf:"varint,9,opt,name=subscribeToNewsletter,proto3" json:"subscribeToNewsletter,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubscriptionResponse) GetTier() uint32 {
	if x != nil {
		return x.Tier
	}
	return 0
}

func (x *GetSubscriptionResponse) GetStatus() SubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return SubscriptionStatus_StatusUnknown
}

func (x *GetSubscriptionResponse) GetDateStarted() uint64 {
	if x != nil {
		return x.DateStarted
	}
	return 0
}

func (x *GetSubscriptionResponse) GetDateEnds() uint64 {
	if x != nil {
		return x.DateEnds
	}
	return 0
}

func (x *GetSubscriptionResponse) GetIsAutoRenew() bool {
	if x != nil {
		return x.IsAutoRenew
	}
	return false
}

func (x *GetSubscriptionResponse) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_MethodCard
}

func (x *GetSubscriptionResponse) GetRequestedAnyName() string {
	if x != nil {
		return x.RequestedAnyName
	}
	return ""
}

func (x *GetSubscriptionResponse) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetSubscriptionResponse) GetSubscribeToNewsletter() bool {
	if x != nil {
		return x.SubscribeToNewsletter
	}
	return false
}

type BuySubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// this is the owner's main EOA (Externally Owned Account) address
	// not AccountAbstraction's SCW (Smart Contract Wallet) address!
	// this is required to reserve a name for the owner (later that is done by user)
	// in the following format: "0x7a250d5630b4cf539739df2c5dacb4c659f2488d"
	OwnerEthAddress string `protobuf:"bytes,2,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// was SubscriptionTier before, changed to uint32 to allow us to use dynamic tiers
	RequestedTier uint32        `protobuf:"varint,3,opt,name=requestedTier,proto3" json:"requestedTier,omitempty"`
	PaymentMethod PaymentMethod `protobuf:"varint,4,opt,name=paymentMethod,proto3,enum=PaymentMethod" json:"paymentMethod,omitempty"`
	// if empty - then no name requested
	// if non-empty - PP node will register that name on behalf of the user
	RequestedAnyName string `protobuf:"bytes,5,opt,name=requestedAnyName,proto3" json:"requestedAnyName,omitempty"`
	// for some payment methods we need to know the user's email
	UserEmail     string `protobuf:"bytes,6,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuySubscriptionRequest) Reset() {
	*x = BuySubscriptionRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuySubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionRequest) ProtoMessage() {}

func (x *BuySubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionRequest.ProtoReflect.Descriptor instead.
func (*BuySubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{3}
}

func (x *BuySubscriptionRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *BuySubscriptionRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *BuySubscriptionRequest) GetRequestedTier() uint32 {
	if x != nil {
		return x.RequestedTier
	}
	return 0
}

func (x *BuySubscriptionRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_MethodCard
}

func (x *BuySubscriptionRequest) GetRequestedAnyName() string {
	if x != nil {
		return x.RequestedAnyName
	}
	return ""
}

func (x *BuySubscriptionRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type BuySubscriptionRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// BuySubscriptionRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuySubscriptionRequestSigned) Reset() {
	*x = BuySubscriptionRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuySubscriptionRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionRequestSigned) ProtoMessage() {}

func (x *BuySubscriptionRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionRequestSigned.ProtoReflect.Descriptor instead.
func (*BuySubscriptionRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{4}
}

func (x *BuySubscriptionRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BuySubscriptionRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BuySubscriptionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// will feature current billing ID
	// stripe.com/?client_reference_id=1234
	PaymentUrl string `protobuf:"bytes,1,opt,name=paymentUrl,proto3" json:"paymentUrl,omitempty"`
	// billingID is passed via mobile client to payment platform
	BillingID     string `protobuf:"bytes,2,opt,name=billingID,proto3" json:"billingID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuySubscriptionResponse) Reset() {
	*x = BuySubscriptionResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuySubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionResponse) ProtoMessage() {}

func (x *BuySubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionResponse.ProtoReflect.Descriptor instead.
func (*BuySubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{5}
}

func (x *BuySubscriptionResponse) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

func (x *BuySubscriptionResponse) GetBillingID() string {
	if x != nil {
		return x.BillingID
	}
	return ""
}

type FinalizeSubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// this is the owner's main EOA (Externally Owned Account) address
	// not AccountAbstraction's SCW (Smart Contract Wallet) address!
	// this is required to reserve a name for the owner (later that is done by user)
	// in the following format: "0x7a250d5630b4cf539739df2c5dacb4c659f2488d"
	OwnerEthAddress string `protobuf:"bytes,2,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// if empty - then no name requested
	RequestedAnyName string `protobuf:"bytes,3,opt,name=requestedAnyName,proto3" json:"requestedAnyName,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FinalizeSubscriptionRequest) Reset() {
	*x = FinalizeSubscriptionRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeSubscriptionRequest) ProtoMessage() {}

func (x *FinalizeSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*FinalizeSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{6}
}

func (x *FinalizeSubscriptionRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *FinalizeSubscriptionRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *FinalizeSubscriptionRequest) GetRequestedAnyName() string {
	if x != nil {
		return x.RequestedAnyName
	}
	return ""
}

type FinalizeSubscriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeSubscriptionResponse) Reset() {
	*x = FinalizeSubscriptionResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeSubscriptionResponse) ProtoMessage() {}

func (x *FinalizeSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*FinalizeSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{7}
}

type FinalizeSubscriptionRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// VerifyEmailRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeSubscriptionRequestSigned) Reset() {
	*x = FinalizeSubscriptionRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeSubscriptionRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeSubscriptionRequestSigned) ProtoMessage() {}

func (x *FinalizeSubscriptionRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeSubscriptionRequestSigned.ProtoReflect.Descriptor instead.
func (*FinalizeSubscriptionRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{8}
}

func (x *FinalizeSubscriptionRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FinalizeSubscriptionRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GetSubscriptionPortalLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId    string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPortalLinkRequest) Reset() {
	*x = GetSubscriptionPortalLinkRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPortalLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPortalLinkRequest) ProtoMessage() {}

func (x *GetSubscriptionPortalLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPortalLinkRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPortalLinkRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubscriptionPortalLinkRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

type GetSubscriptionPortalLinkRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GetSubscriptionPortalLinkRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPortalLinkRequestSigned) Reset() {
	*x = GetSubscriptionPortalLinkRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPortalLinkRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPortalLinkRequestSigned) ProtoMessage() {}

func (x *GetSubscriptionPortalLinkRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPortalLinkRequestSigned.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPortalLinkRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubscriptionPortalLinkRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetSubscriptionPortalLinkRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GetSubscriptionPortalLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortalUrl     string                 `protobuf:"bytes,1,opt,name=portalUrl,proto3" json:"portalUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPortalLinkResponse) Reset() {
	*x = GetSubscriptionPortalLinkResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPortalLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPortalLinkResponse) ProtoMessage() {}

func (x *GetSubscriptionPortalLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPortalLinkResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPortalLinkResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubscriptionPortalLinkResponse) GetPortalUrl() string {
	if x != nil {
		return x.PortalUrl
	}
	return ""
}

type GetVerificationEmailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId              string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	Email                   string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	SubscribeToNewsletter   bool   `protobuf:"varint,3,opt,name=subscribeToNewsletter,proto3" json:"subscribeToNewsletter,omitempty"`
	InsiderTipsAndTutorials bool   `protobuf:"varint,4,opt,name=insiderTipsAndTutorials,proto3" json:"insiderTipsAndTutorials,omitempty"`
	// if we are coming from the onboarding screen
	IsOnboardingList bool `protobuf:"varint,5,opt,name=isOnboardingList,proto3" json:"isOnboardingList,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetVerificationEmailRequest) Reset() {
	*x = GetVerificationEmailRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVerificationEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationEmailRequest) ProtoMessage() {}

func (x *GetVerificationEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationEmailRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationEmailRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{12}
}

func (x *GetVerificationEmailRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *GetVerificationEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetVerificationEmailRequest) GetSubscribeToNewsletter() bool {
	if x != nil {
		return x.SubscribeToNewsletter
	}
	return false
}

func (x *GetVerificationEmailRequest) GetInsiderTipsAndTutorials() bool {
	if x != nil {
		return x.InsiderTipsAndTutorials
	}
	return false
}

func (x *GetVerificationEmailRequest) GetIsOnboardingList() bool {
	if x != nil {
		return x.IsOnboardingList
	}
	return false
}

type GetVerificationEmailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVerificationEmailResponse) Reset() {
	*x = GetVerificationEmailResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVerificationEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationEmailResponse) ProtoMessage() {}

func (x *GetVerificationEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationEmailResponse.ProtoReflect.Descriptor instead.
func (*GetVerificationEmailResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{13}
}

type GetVerificationEmailRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GetVerificationEmailRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVerificationEmailRequestSigned) Reset() {
	*x = GetVerificationEmailRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVerificationEmailRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationEmailRequestSigned) ProtoMessage() {}

func (x *GetVerificationEmailRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationEmailRequestSigned.ProtoReflect.Descriptor instead.
func (*GetVerificationEmailRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{14}
}

func (x *GetVerificationEmailRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetVerificationEmailRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VerifyEmailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// this is the owner's main EOA (Externally Owned Account) address
	// not AccountAbstraction's SCW (Smart Contract Wallet) address!
	// this is required to reserve a name for the owner (later that is done by user)
	// in the following format: "0x7a250d5630b4cf539739df2c5dacb4c659f2488d"
	OwnerEthAddress string `protobuf:"bytes,2,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// code received in the email
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyEmailRequest) Reset() {
	*x = VerifyEmailRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequest) ProtoMessage() {}

func (x *VerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{15}
}

func (x *VerifyEmailRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *VerifyEmailRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *VerifyEmailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyEmailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyEmailResponse) Reset() {
	*x = VerifyEmailResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailResponse) ProtoMessage() {}

func (x *VerifyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailResponse.ProtoReflect.Descriptor instead.
func (*VerifyEmailResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{16}
}

func (x *VerifyEmailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type VerifyEmailRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// VerifyEmailRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyEmailRequestSigned) Reset() {
	*x = VerifyEmailRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEmailRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequestSigned) ProtoMessage() {}

func (x *VerifyEmailRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequestSigned.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{17}
}

func (x *VerifyEmailRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VerifyEmailRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type IsNameValidRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestedTier    uint32                 `protobuf:"varint,1,opt,name=requestedTier,proto3" json:"requestedTier,omitempty"`
	RequestedAnyName string                 `protobuf:"bytes,2,opt,name=requestedAnyName,proto3" json:"requestedAnyName,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IsNameValidRequest) Reset() {
	*x = IsNameValidRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsNameValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNameValidRequest) ProtoMessage() {}

func (x *IsNameValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNameValidRequest.ProtoReflect.Descriptor instead.
func (*IsNameValidRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{18}
}

func (x *IsNameValidRequest) GetRequestedTier() uint32 {
	if x != nil {
		return x.RequestedTier
	}
	return 0
}

func (x *IsNameValidRequest) GetRequestedAnyName() string {
	if x != nil {
		return x.RequestedAnyName
	}
	return ""
}

type IsNameValidResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Code          IsNameValidResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=IsNameValidResponse_Code" json:"code,omitempty"`
	Description   string                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsNameValidResponse) Reset() {
	*x = IsNameValidResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsNameValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNameValidResponse) ProtoMessage() {}

func (x *IsNameValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNameValidResponse.ProtoReflect.Descriptor instead.
func (*IsNameValidResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{19}
}

func (x *IsNameValidResponse) GetCode() IsNameValidResponse_Code {
	if x != nil {
		return x.Code
	}
	return IsNameValidResponse_Valid
}

func (x *IsNameValidResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type VerifyAppStoreReceiptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// receipt is a JWT-encoded information about subscription purchase
	Receipt       string `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyAppStoreReceiptRequest) Reset() {
	*x = VerifyAppStoreReceiptRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyAppStoreReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAppStoreReceiptRequest) ProtoMessage() {}

func (x *VerifyAppStoreReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAppStoreReceiptRequest.ProtoReflect.Descriptor instead.
func (*VerifyAppStoreReceiptRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyAppStoreReceiptRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *VerifyAppStoreReceiptRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

type VerifyAppStoreReceiptRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// VerifyAppStoreReceiptRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyAppStoreReceiptRequestSigned) Reset() {
	*x = VerifyAppStoreReceiptRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyAppStoreReceiptRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAppStoreReceiptRequestSigned) ProtoMessage() {}

func (x *VerifyAppStoreReceiptRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAppStoreReceiptRequestSigned.ProtoReflect.Descriptor instead.
func (*VerifyAppStoreReceiptRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{21}
}

func (x *VerifyAppStoreReceiptRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VerifyAppStoreReceiptRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VerifyAppStoreReceiptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyAppStoreReceiptResponse) Reset() {
	*x = VerifyAppStoreReceiptResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyAppStoreReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAppStoreReceiptResponse) ProtoMessage() {}

func (x *VerifyAppStoreReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAppStoreReceiptResponse.ProtoReflect.Descriptor instead.
func (*VerifyAppStoreReceiptResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{22}
}

type CodeGetInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// this is the owner's main EOA (Externally Owned Account) address
	// not AccountAbstraction's SCW (Smart Contract Wallet) address!
	// this is required to reserve a name for the owner (later that is done by user)
	// in the following format: "0x7a250d5630b4cf539739df2c5dacb4c659f2488d"
	OwnerEthAddress string `protobuf:"bytes,2,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// code received in the email
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeGetInfoRequest) Reset() {
	*x = CodeGetInfoRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeGetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeGetInfoRequest) ProtoMessage() {}

func (x *CodeGetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeGetInfoRequest.ProtoReflect.Descriptor instead.
func (*CodeGetInfoRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{23}
}

func (x *CodeGetInfoRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *CodeGetInfoRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *CodeGetInfoRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CodeGetInfoRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CodeGetInfoRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeGetInfoRequestSigned) Reset() {
	*x = CodeGetInfoRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeGetInfoRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeGetInfoRequestSigned) ProtoMessage() {}

func (x *CodeGetInfoRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeGetInfoRequestSigned.ProtoReflect.Descriptor instead.
func (*CodeGetInfoRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{24}
}

func (x *CodeGetInfoRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CodeGetInfoRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CodeGetInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tier          uint32                 `protobuf:"varint,1,opt,name=tier,proto3" json:"tier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeGetInfoResponse) Reset() {
	*x = CodeGetInfoResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeGetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeGetInfoResponse) ProtoMessage() {}

func (x *CodeGetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeGetInfoResponse.ProtoReflect.Descriptor instead.
func (*CodeGetInfoResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{25}
}

func (x *CodeGetInfoResponse) GetTier() uint32 {
	if x != nil {
		return x.Tier
	}
	return 0
}

type CodeRedeemRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	// this is the owner's main EOA (Externally Owned Account) address
	// not AccountAbstraction's SCW (Smart Contract Wallet) address!
	// this is required to reserve a name for the owner (later that is done by user)
	// in the following format: "0x7a250d5630b4cf539739df2c5dacb4c659f2488d"
	OwnerEthAddress string `protobuf:"bytes,2,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// if empty - then no name requested
	RequestedAnyName string `protobuf:"bytes,3,opt,name=requestedAnyName,proto3" json:"requestedAnyName,omitempty"`
	// code received in the email
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeRedeemRequest) Reset() {
	*x = CodeRedeemRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeRedeemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRedeemRequest) ProtoMessage() {}

func (x *CodeRedeemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRedeemRequest.ProtoReflect.Descriptor instead.
func (*CodeRedeemRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{26}
}

func (x *CodeRedeemRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *CodeRedeemRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *CodeRedeemRequest) GetRequestedAnyName() string {
	if x != nil {
		return x.RequestedAnyName
	}
	return ""
}

func (x *CodeRedeemRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CodeRedeemRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CodeRedeemRequest
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeRedeemRequestSigned) Reset() {
	*x = CodeRedeemRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeRedeemRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRedeemRequestSigned) ProtoMessage() {}

func (x *CodeRedeemRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRedeemRequestSigned.ProtoReflect.Descriptor instead.
func (*CodeRedeemRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{27}
}

func (x *CodeRedeemRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CodeRedeemRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CodeRedeemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeRedeemResponse) Reset() {
	*x = CodeRedeemResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeRedeemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRedeemResponse) ProtoMessage() {}

func (x *CodeRedeemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRedeemResponse.ProtoReflect.Descriptor instead.
func (*CodeRedeemResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP(), []int{28}
}

func (x *CodeRedeemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_paymentservice_paymentserviceproto_protos_paymentservice_proto protoreflect.FileDescriptor

var file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDesc = string([]byte{
	0x0a, 0x3e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x44, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x44,
	0x22, 0x56, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x22, 0x88, 0x02, 0x0a, 0x16,
	0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x56, 0x0a, 0x1c, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x57,
	0x0a, 0x17, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x22, 0x93, 0x01, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a,
	0x1c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a,
	0x21, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x26, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x41, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x17, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x41, 0x6e,
	0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x41, 0x6e, 0x64,
	0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x72, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x49,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x13, 0x49, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x49, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x44, 0x6f, 0x74, 0x41, 0x6e, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x6f, 0x6f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54,
	0x6f, 0x6f, 0x4c, 0x6f, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x61, 0x73, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x68, 0x61, 0x72, 0x73, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x69, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x06, 0x22, 0x58, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x22, 0x5c, 0x0a, 0x22, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x1f, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x72, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6f, 0x64, 0x65,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x69, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0xc3, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x69, 0x65, 0x72, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x69, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x54, 0x69, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x31, 0x57, 0x65,
	0x65, 0x6b, 0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x69, 0x65, 0x72,
	0x43, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x31, 0x57, 0x65, 0x65, 0x6b, 0x54, 0x45,
	0x53, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x69, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x31, 0x59, 0x65, 0x61, 0x72, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x69,
	0x65, 0x72, 0x43, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x31, 0x59, 0x65, 0x61, 0x72,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x69, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x75, 0x73, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x69, 0x65, 0x72, 0x41,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x07, 0x2a, 0x73, 0x0a, 0x12,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x03, 0x2a, 0x97, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x61,
	0x70, 0x70, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x61, 0x70, 0x70, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x06, 0x2a, 0xfc, 0x03, 0x0a, 0x0a,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x74,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x69, 0x65, 0x72, 0x57, 0x72, 0x6f,
	0x6e, 0x67, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x69, 0x65, 0x72, 0x49, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x10, 0x06,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x07,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x08, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x75, 0x62, 0x73, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x57, 0x72,
	0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x0c,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x6e, 0x74, 0x10, 0x0e,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x11, 0x12, 0x17, 0x0a,
	0x13, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x10, 0x12, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x10,
	0x14, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x55, 0x73, 0x65, 0x64, 0x10, 0x16, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x10, 0xd8, 0x04, 0x32, 0xf9, 0x06, 0x0a, 0x14, 0x41,
	0x6e, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0x18, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x49, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x13, 0x2e, 0x49, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0x18, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0x1d, 0x2e,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x27, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x1a, 0x22, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x1a, 0x14, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x69, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x23,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x1a, 0x1e, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a,
	0x14, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a,
	0x13, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescOnce sync.Once
	file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescData []byte
)

func file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescGZIP() []byte {
	file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescOnce.Do(func() {
		file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDesc), len(file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDesc)))
	})
	return file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDescData
}

var file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_paymentservice_paymentserviceproto_protos_paymentservice_proto_goTypes = []any{
	(SubscriptionTier)(0),                          // 0: SubscriptionTier
	(SubscriptionStatus)(0),                        // 1: SubscriptionStatus
	(PaymentMethod)(0),                             // 2: PaymentMethod
	(ErrorCodes)(0),                                // 3: ErrorCodes
	(IsNameValidResponse_Code)(0),                  // 4: IsNameValidResponse.Code
	(*GetSubscriptionRequest)(nil),                 // 5: GetSubscriptionRequest
	(*GetSubscriptionRequestSigned)(nil),           // 6: GetSubscriptionRequestSigned
	(*GetSubscriptionResponse)(nil),                // 7: GetSubscriptionResponse
	(*BuySubscriptionRequest)(nil),                 // 8: BuySubscriptionRequest
	(*BuySubscriptionRequestSigned)(nil),           // 9: BuySubscriptionRequestSigned
	(*BuySubscriptionResponse)(nil),                // 10: BuySubscriptionResponse
	(*FinalizeSubscriptionRequest)(nil),            // 11: FinalizeSubscriptionRequest
	(*FinalizeSubscriptionResponse)(nil),           // 12: FinalizeSubscriptionResponse
	(*FinalizeSubscriptionRequestSigned)(nil),      // 13: FinalizeSubscriptionRequestSigned
	(*GetSubscriptionPortalLinkRequest)(nil),       // 14: GetSubscriptionPortalLinkRequest
	(*GetSubscriptionPortalLinkRequestSigned)(nil), // 15: GetSubscriptionPortalLinkRequestSigned
	(*GetSubscriptionPortalLinkResponse)(nil),      // 16: GetSubscriptionPortalLinkResponse
	(*GetVerificationEmailRequest)(nil),            // 17: GetVerificationEmailRequest
	(*GetVerificationEmailResponse)(nil),           // 18: GetVerificationEmailResponse
	(*GetVerificationEmailRequestSigned)(nil),      // 19: GetVerificationEmailRequestSigned
	(*VerifyEmailRequest)(nil),                     // 20: VerifyEmailRequest
	(*VerifyEmailResponse)(nil),                    // 21: VerifyEmailResponse
	(*VerifyEmailRequestSigned)(nil),               // 22: VerifyEmailRequestSigned
	(*IsNameValidRequest)(nil),                     // 23: IsNameValidRequest
	(*IsNameValidResponse)(nil),                    // 24: IsNameValidResponse
	(*VerifyAppStoreReceiptRequest)(nil),           // 25: VerifyAppStoreReceiptRequest
	(*VerifyAppStoreReceiptRequestSigned)(nil),     // 26: VerifyAppStoreReceiptRequestSigned
	(*VerifyAppStoreReceiptResponse)(nil),          // 27: VerifyAppStoreReceiptResponse
	(*CodeGetInfoRequest)(nil),                     // 28: CodeGetInfoRequest
	(*CodeGetInfoRequestSigned)(nil),               // 29: CodeGetInfoRequestSigned
	(*CodeGetInfoResponse)(nil),                    // 30: CodeGetInfoResponse
	(*CodeRedeemRequest)(nil),                      // 31: CodeRedeemRequest
	(*CodeRedeemRequestSigned)(nil),                // 32: CodeRedeemRequestSigned
	(*CodeRedeemResponse)(nil),                     // 33: CodeRedeemResponse
	(*GetTiersRequestSigned)(nil),                  // 34: GetTiersRequestSigned
	(*GetTiersResponse)(nil),                       // 35: GetTiersResponse
}
var file_paymentservice_paymentserviceproto_protos_paymentservice_proto_depIdxs = []int32{
	1,  // 0: GetSubscriptionResponse.status:type_name -> SubscriptionStatus
	2,  // 1: GetSubscriptionResponse.paymentMethod:type_name -> PaymentMethod
	2,  // 2: BuySubscriptionRequest.paymentMethod:type_name -> PaymentMethod
	4,  // 3: IsNameValidResponse.code:type_name -> IsNameValidResponse.Code
	6,  // 4: AnyPaymentProcessing.GetSubscriptionStatus:input_type -> GetSubscriptionRequestSigned
	23, // 5: AnyPaymentProcessing.IsNameValid:input_type -> IsNameValidRequest
	9,  // 6: AnyPaymentProcessing.BuySubscription:input_type -> BuySubscriptionRequestSigned
	13, // 7: AnyPaymentProcessing.FinalizeSubscription:input_type -> FinalizeSubscriptionRequestSigned
	15, // 8: AnyPaymentProcessing.GetSubscriptionPortalLink:input_type -> GetSubscriptionPortalLinkRequestSigned
	19, // 9: AnyPaymentProcessing.GetVerificationEmail:input_type -> GetVerificationEmailRequestSigned
	22, // 10: AnyPaymentProcessing.VerifyEmail:input_type -> VerifyEmailRequestSigned
	34, // 11: AnyPaymentProcessing.GetAllTiers:input_type -> GetTiersRequestSigned
	26, // 12: AnyPaymentProcessing.VerifyAppStoreReceipt:input_type -> VerifyAppStoreReceiptRequestSigned
	29, // 13: AnyPaymentProcessing.CodeGetInfo:input_type -> CodeGetInfoRequestSigned
	32, // 14: AnyPaymentProcessing.CodeRedeem:input_type -> CodeRedeemRequestSigned
	7,  // 15: AnyPaymentProcessing.GetSubscriptionStatus:output_type -> GetSubscriptionResponse
	24, // 16: AnyPaymentProcessing.IsNameValid:output_type -> IsNameValidResponse
	10, // 17: AnyPaymentProcessing.BuySubscription:output_type -> BuySubscriptionResponse
	12, // 18: AnyPaymentProcessing.FinalizeSubscription:output_type -> FinalizeSubscriptionResponse
	16, // 19: AnyPaymentProcessing.GetSubscriptionPortalLink:output_type -> GetSubscriptionPortalLinkResponse
	18, // 20: AnyPaymentProcessing.GetVerificationEmail:output_type -> GetVerificationEmailResponse
	21, // 21: AnyPaymentProcessing.VerifyEmail:output_type -> VerifyEmailResponse
	35, // 22: AnyPaymentProcessing.GetAllTiers:output_type -> GetTiersResponse
	27, // 23: AnyPaymentProcessing.VerifyAppStoreReceipt:output_type -> VerifyAppStoreReceiptResponse
	30, // 24: AnyPaymentProcessing.CodeGetInfo:output_type -> CodeGetInfoResponse
	33, // 25: AnyPaymentProcessing.CodeRedeem:output_type -> CodeRedeemResponse
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_paymentservice_paymentserviceproto_protos_paymentservice_proto_init() }
func file_paymentservice_paymentserviceproto_protos_paymentservice_proto_init() {
	if File_paymentservice_paymentserviceproto_protos_paymentservice_proto != nil {
		return
	}
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDesc), len(file_paymentservice_paymentserviceproto_protos_paymentservice_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paymentservice_paymentserviceproto_protos_paymentservice_proto_goTypes,
		DependencyIndexes: file_paymentservice_paymentserviceproto_protos_paymentservice_proto_depIdxs,
		EnumInfos:         file_paymentservice_paymentserviceproto_protos_paymentservice_proto_enumTypes,
		MessageInfos:      file_paymentservice_paymentserviceproto_protos_paymentservice_proto_msgTypes,
	}.Build()
	File_paymentservice_paymentserviceproto_protos_paymentservice_proto = out.File
	file_paymentservice_paymentserviceproto_protos_paymentservice_proto_goTypes = nil
	file_paymentservice_paymentserviceproto_protos_paymentservice_proto_depIdxs = nil
}
