// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: paymentservice/paymentserviceproto/protos/paymentservice_tiers.proto

package paymentserviceproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeriodType int32

const (
	PeriodType_PeriodTypeUnknown   PeriodType = 0
	PeriodType_PeriodTypeUnlimited PeriodType = 1
	PeriodType_PeriodTypeDays      PeriodType = 2
	PeriodType_PeriodTypeWeeks     PeriodType = 3
	PeriodType_PeriodTypeMonths    PeriodType = 4
	PeriodType_PeriodTypeYears     PeriodType = 5
)

// Enum value maps for PeriodType.
var (
	PeriodType_name = map[int32]string{
		0: "PeriodTypeUnknown",
		1: "PeriodTypeUnlimited",
		2: "PeriodTypeDays",
		3: "PeriodTypeWeeks",
		4: "PeriodTypeMonths",
		5: "PeriodTypeYears",
	}
	PeriodType_value = map[string]int32{
		"PeriodTypeUnknown":   0,
		"PeriodTypeUnlimited": 1,
		"PeriodTypeDays":      2,
		"PeriodTypeWeeks":     3,
		"PeriodTypeMonths":    4,
		"PeriodTypeYears":     5,
	}
)

func (x PeriodType) Enum() *PeriodType {
	p := new(PeriodType)
	*p = x
	return p
}

func (x PeriodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeriodType) Descriptor() protoreflect.EnumDescriptor {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_enumTypes[0].Descriptor()
}

func (PeriodType) Type() protoreflect.EnumType {
	return &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_enumTypes[0]
}

func (x PeriodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeriodType.Descriptor instead.
func (PeriodType) EnumDescriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{0}
}

type Feature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feature) Reset() {
	*x = Feature{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{0}
}

func (x *Feature) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetTiersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyId    string `protobuf:"bytes,1,opt,name=ownerAnyId,proto3" json:"ownerAnyId,omitempty"`
	Locale        string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTiersRequest) Reset() {
	*x = GetTiersRequest{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTiersRequest) ProtoMessage() {}

func (x *GetTiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTiersRequest.ProtoReflect.Descriptor instead.
func (*GetTiersRequest) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{1}
}

func (x *GetTiersRequest) GetOwnerAnyId() string {
	if x != nil {
		return x.OwnerAnyId
	}
	return ""
}

func (x *GetTiersRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetTiersRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GetTiersRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// this is payload signed with payload.ownerAnyID
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTiersRequestSigned) Reset() {
	*x = GetTiersRequestSigned{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTiersRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTiersRequestSigned) ProtoMessage() {}

func (x *GetTiersRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTiersRequestSigned.ProtoReflect.Descriptor instead.
func (*GetTiersRequestSigned) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{2}
}

func (x *GetTiersRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetTiersRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type TierData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// this is a unique ID of the tier
	// you should hardcode this in your app and provide icon, graphics, etc for each tier
	// (even for old/historical/inactive/hidden tiers)
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// localazied name of the tier
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// just a short technical description
	// you don't have to use it, you can use your own UI-friendly texts
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// can you buy it (ON ALL PLATFORMS, without clarification)?
	IsActive bool `protobuf:"varint,4,opt,name=isActive,proto3" json:"isActive,omitempty"`
	// is this tier for debugging only?
	IsTest bool `protobuf:"varint,5,opt,name=isTest,proto3" json:"isTest,omitempty"`
	// hidden tiers are only visible once user got them
	IsHiddenTier bool `protobuf:"varint,6,opt,name=isHiddenTier,proto3" json:"isHiddenTier,omitempty"`
	// how long is the period of the subscription
	PeriodType PeriodType `protobuf:"varint,7,opt,name=periodType,proto3,enum=PeriodType" json:"periodType,omitempty"`
	// i.e. "5 days" or "3 years"
	PeriodValue uint32 `protobuf:"varint,8,opt,name=periodValue,proto3" json:"periodValue,omitempty"`
	// this one is a price we use ONLY on Stripe platform
	PriceStripeUsdCents uint32 `protobuf:"varint,9,opt,name=priceStripeUsdCents,proto3" json:"priceStripeUsdCents,omitempty"`
	// number of ANY NS names that this tier includes
	// (not counted as a "feature" and not in the features list)
	AnyNamesCountIncluded uint32 `protobuf:"varint,10,opt,name=anyNamesCountIncluded,proto3" json:"anyNamesCountIncluded,omitempty"`
	// somename.any - len of 8
	AnyNameMinLength uint32 `protobuf:"varint,11,opt,name=anyNameMinLength,proto3" json:"anyNameMinLength,omitempty"`
	// each tier has a set of features
	Features []*Feature `protobuf:"bytes,12,rep,name=features,proto3" json:"features,omitempty"`
	// green, blue, red, purple or custom color in string format #ff00ff
	ColorStr string `protobuf:"bytes,13,opt,name=colorStr,proto3" json:"colorStr,omitempty"`
	// Stripe platform-specific data:
	StripeProductId string `protobuf:"bytes,14,opt,name=stripeProductId,proto3" json:"stripeProductId,omitempty"`
	StripeManageUrl string `protobuf:"bytes,15,opt,name=stripeManageUrl,proto3" json:"stripeManageUrl,omitempty"`
	// iOS platform-specific data:
	IosProductId string `protobuf:"bytes,16,opt,name=iosProductId,proto3" json:"iosProductId,omitempty"`
	IosManageUrl string `protobuf:"bytes,17,opt,name=iosManageUrl,proto3" json:"iosManageUrl,omitempty"`
	// Android platform-specific data:
	AndroidProductId string `protobuf:"bytes,18,opt,name=androidProductId,proto3" json:"androidProductId,omitempty"`
	AndroidManageUrl string `protobuf:"bytes,19,opt,name=androidManageUrl,proto3" json:"androidManageUrl,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TierData) Reset() {
	*x = TierData{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TierData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TierData) ProtoMessage() {}

func (x *TierData) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TierData.ProtoReflect.Descriptor instead.
func (*TierData) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{3}
}

func (x *TierData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TierData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TierData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TierData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *TierData) GetIsTest() bool {
	if x != nil {
		return x.IsTest
	}
	return false
}

func (x *TierData) GetIsHiddenTier() bool {
	if x != nil {
		return x.IsHiddenTier
	}
	return false
}

func (x *TierData) GetPeriodType() PeriodType {
	if x != nil {
		return x.PeriodType
	}
	return PeriodType_PeriodTypeUnknown
}

func (x *TierData) GetPeriodValue() uint32 {
	if x != nil {
		return x.PeriodValue
	}
	return 0
}

func (x *TierData) GetPriceStripeUsdCents() uint32 {
	if x != nil {
		return x.PriceStripeUsdCents
	}
	return 0
}

func (x *TierData) GetAnyNamesCountIncluded() uint32 {
	if x != nil {
		return x.AnyNamesCountIncluded
	}
	return 0
}

func (x *TierData) GetAnyNameMinLength() uint32 {
	if x != nil {
		return x.AnyNameMinLength
	}
	return 0
}

func (x *TierData) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *TierData) GetColorStr() string {
	if x != nil {
		return x.ColorStr
	}
	return ""
}

func (x *TierData) GetStripeProductId() string {
	if x != nil {
		return x.StripeProductId
	}
	return ""
}

func (x *TierData) GetStripeManageUrl() string {
	if x != nil {
		return x.StripeManageUrl
	}
	return ""
}

func (x *TierData) GetIosProductId() string {
	if x != nil {
		return x.IosProductId
	}
	return ""
}

func (x *TierData) GetIosManageUrl() string {
	if x != nil {
		return x.IosManageUrl
	}
	return ""
}

func (x *TierData) GetAndroidProductId() string {
	if x != nil {
		return x.AndroidProductId
	}
	return ""
}

func (x *TierData) GetAndroidManageUrl() string {
	if x != nil {
		return x.AndroidManageUrl
	}
	return ""
}

type GetTiersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of all available tiers
	Tiers         []*TierData `protobuf:"bytes,1,rep,name=tiers,proto3" json:"tiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTiersResponse) Reset() {
	*x = GetTiersResponse{}
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTiersResponse) ProtoMessage() {}

func (x *GetTiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTiersResponse.ProtoReflect.Descriptor instead.
func (*GetTiersResponse) Descriptor() ([]byte, []int) {
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP(), []int{4}
}

func (x *GetTiersResponse) GetTiers() []*TierData {
	if x != nil {
		return x.Tiers
	}
	return nil
}

var File_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto protoreflect.FileDescriptor

var file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDesc = string([]byte{
	0x0a, 0x44, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x4f,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xc1, 0x05, 0x0a, 0x08, 0x54, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x55, 0x73, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x55, 0x73, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a,
	0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6f, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6f, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x69, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x74, 0x69, 0x65, 0x72, 0x73, 0x2a, 0x90, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x79, 0x73, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x73, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x73, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x10, 0x05, 0x42, 0x24, 0x5a, 0x22, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescOnce sync.Once
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescData []byte
)

func file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescGZIP() []byte {
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescOnce.Do(func() {
		file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDesc), len(file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDesc)))
	})
	return file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDescData
}

var file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_goTypes = []any{
	(PeriodType)(0),               // 0: PeriodType
	(*Feature)(nil),               // 1: Feature
	(*GetTiersRequest)(nil),       // 2: GetTiersRequest
	(*GetTiersRequestSigned)(nil), // 3: GetTiersRequestSigned
	(*TierData)(nil),              // 4: TierData
	(*GetTiersResponse)(nil),      // 5: GetTiersResponse
}
var file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_depIdxs = []int32{
	0, // 0: TierData.periodType:type_name -> PeriodType
	1, // 1: TierData.features:type_name -> Feature
	4, // 2: GetTiersResponse.tiers:type_name -> TierData
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_init() }
func file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_init() {
	if File_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDesc), len(file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_goTypes,
		DependencyIndexes: file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_depIdxs,
		EnumInfos:         file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_enumTypes,
		MessageInfos:      file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_msgTypes,
	}.Build()
	File_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto = out.File
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_goTypes = nil
	file_paymentservice_paymentserviceproto_protos_paymentservice_tiers_proto_depIdxs = nil
}
